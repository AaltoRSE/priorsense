% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_powerscaling_data.R, R/powerscale.R,
%   R/powerscale_sequence.R, R/powerscale_set.R, R/priorsense_construct.R
\name{create_powerscaling_data}
\alias{create_powerscaling_data}
\alias{powerscale-overview}
\alias{powerscale}
\alias{powerscale.default}
\alias{powerscale.powerscaling_data}
\alias{powerscale_sequence}
\alias{powerscale_set}
\alias{powerscale_set.CmdStanFit}
\alias{powerscale_set.stanfit}
\alias{powerscale_set.brmsfit}
\title{Prior/likelihood power-scaling perturbation}
\usage{
create_powerscaling_data(
  x,
  log_prior_fn,
  joint_log_lik_fn,
  get_draws,
  unconstrain_pars,
  log_prob_upars,
  log_ratio_upars
)

powerscale(x, ...)

\method{powerscale}{default}(
  x,
  alpha,
  variable,
  component,
  log_prior_fn,
  joint_log_lik_fn,
  get_draws,
  unconstrain_pars,
  log_prob_upars,
  log_ratio_upars,
  is_method = "psis",
  moment_match = FALSE,
  k_threshold = 0.5,
  resample = FALSE,
  transform = FALSE,
  ...
)

\method{powerscale}{powerscaling_data}(x, alpha, component = "prior", variable = NULL, ...)

powerscale_sequence(x, ...)

powerscale_set(fit, ...)

\method{powerscale_set}{CmdStanFit}(
  fit,
  lower_alpha = 0.5,
  upper_alpha = 1/lower_alpha,
  variable = NULL,
  component = c("prior", "likelihood"),
  is_method = "psis",
  moment_match = FALSE,
  k_threshold = 0.5,
  resample = FALSE,
  log_prior_fn = log_prior_CmdStanFit,
  joint_log_lik_fn = joint_log_lik_CmdStanFit,
  transform = FALSE,
  ...
)

\method{powerscale_set}{stanfit}(
  fit,
  lower_alpha = 0.5,
  upper_alpha = 1/lower_alpha,
  variable = NULL,
  component = c("prior", "likelihood"),
  is_method = "psis",
  moment_match = FALSE,
  k_threshold = 0.5,
  resample = FALSE,
  log_prior_fn = log_prior_stanfit,
  joint_log_lik_fn = joint_log_lik_stanfit,
  transform = FALSE,
  ...
)

\method{powerscale_set}{brmsfit}(
  fit,
  lower_alpha = 0.5,
  upper_alpha = 1/lower_alpha,
  variable = NULL,
  component = c("prior", "likelihood"),
  is_method = "psis",
  moment_match = FALSE,
  k_threshold = 0.5,
  resample = FALSE,
  log_prior_fn = log_prior_brmsfit,
  joint_log_lik_fn = joint_log_lik_brmsfit,
  transform = FALSE,
  ...
)

create_powerscaling_data(
  x,
  log_prior_fn,
  joint_log_lik_fn,
  get_draws,
  unconstrain_pars,
  log_prob_upars,
  log_ratio_upars
)
}
\arguments{
\item{log_prior_fn}{A function that takes as input the model fit
and returns the log prior values.}

\item{joint_log_lik_fn}{A function that takes as input the model
fit and returns the joint log likelihood values.}

\item{...}{Further arguments passed to the custom functions
documented above.}

\item{alpha}{Value by which to power-scale specified component. (likelihood/prior).}

\item{variable}{Vector of variable names to return estimated
posterior draws for.}

\item{component}{Component to be power-scaled (either "prior" or
"likelihood"). For powerscale_sequence, this can be both "prior"
and "likelihood".}

\item{is_method}{The importance sampling method to use. The
following methods are available:
\itemize{
\item \code{"psis"}: Pareto-Smoothed Importance Sampling (PSIS). Default
method.
\item \code{"tis"}: Truncated Importance Sampling (TIS) with truncation at
\code{sqrt(S)}, where \code{S} is the number of posterior draws.
\item \code{"sis"}: Standard Importance Sampling (SIS).
}

For further details, see the \code{loo} package.}

\item{moment_match}{Logical; Indicate whether or not moment
matching should be performed. Can only be TRUE if \code{is_method} is
"psis".}

\item{k_threshold}{Threshold value for Pareto k values above which
the moment matching algorithm is used. Default is 0.5.}

\item{resample}{Logical; Indicate whether or not draws should be
resampled based on calculated importance weights.}

\item{transform}{Indicate transformation of posterior
draws. Either "scale" or "spherize".}

\item{fit}{A fitted model object of class \code{stanfit}, \code{brmsfit} or
\code{CmdStanFit}.}

\item{lower_alpha}{Lower power-scaling alpha value in sequence.}

\item{upper_alpha}{Upper power-scaling alpha value in sequence.}

\item{alpha_step}{Step size of power-scaling alphas in sequence.}
}
\value{
A \code{powerscaled_draws} or \code{powerscaled_sequence} object,
which contains the estimated posterior draws resulting from the
power-scaling perturbations and details of the perturbation and
estimation methods.
}
\description{
Estimate posterior draws based on power-scaling perturbations of
prior or likelihood using importance sampling (and optionally moment matching).
}
\references{
Kallioinen, N., Paananen, T., Bürkner, P-C., Vehtari, A. (in
prep).  Detecting and diagnosing prior and likelihood sensitivity
with power-scaling perturbations.

Vehtari, A., Simpson, D., Gelman, A., Yao, Y., and Gabry,
J. (2019).  Pareto smoothed importance sampling.  \href{https://arxiv.org/abs/1507}{preprint arXiv:1507.02646}

Paananen, T., Piironen, J., Bürkner, P-C., Vehtari, A. (2021).
Implicitly adaptive importance sampling.  \emph{Statistics and
Computing}. 31(16).  \code{doi:10.1007/s11222-020-09982-2}
}
